{"version":3,"sources":["constants.js","Cards.js","Controls.js","ExpirableLocalStorage.js","components/hint/Hint.jsx","App.js","reportWebVitals.js","index.js","components/hint/style.module.css"],"names":["CARDS","CARD_NAMES","CARD_GROUP_HINTS","CARDS_IN_GROUP","CARDS_REMOVE_FROM_GROUP","CARD_HINTS","Cards","splitRegExp","RegExp","this","typeCount","typeRemove","hints","cardTypes","map","cards","replace","split","item","trim","slice","pickedCards","index","push","_pickRandomFromArray","cardType","card","cardIndexes","sort","a","b","cardIndex","splice","oldCard","newCard","pick","array","count","shuffle","Controls","onStageChange","stage","done","className","onClick","disabled","ExpirableLocalStorage","expire","_fixMode","localStorage","getItem","value","setItem","removeItem","key","content","contentString","JSON","parse","e","console","error","fixMode","data","Date","setSeconds","getSeconds","stringify","Hint","message","log","wrapperRef","useRef","useState","isOpen","setIsOpen","ref","type","style","button","hint","hintElement","dangerouslySetInnerHTML","__html","expirableLocalStorage","get","App","setFixMode","cardList","setCardList","time","setTime","showTime","setShowTime","setStage","initialPrepareToRemove","cardsPreparedToRemove","prepareToRemove","setDone","prepareToRemoveACard","typeIndex","has","delete","canRemoveCard","set","Map","size","values","rerenderList","cardsFromType","paddingLeft","bind","readOnly","checked","isStage0Done","entries","allCardsPreparedToRemove","Number","useEffect","restoreFromObject","rand","newTime","unpick","Array","from","keys","onStage0Change","repick","onStage1Change","class","display","toLocaleTimeString","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c7f1bc71.chunk.js","sourcesContent":["export const ZATAN = `1. Выполнить один успешный Computers/\r\nPresence тест.\r\n2. Убить одну вражескую модель.\r\n3. Выполнить один успешный Lockpick/\r\nSearch тест.\r\n4. Нанести ранения двум вражеским\r\nмоделям.\r\n5. Выполнить один успешный Search/\r\nPresence тест.\r\n6. Захватить и удерживать 1 Предмет до\r\nконца игры.\r\n7. Иметь на конец игры хотя бы одну модель\r\nв целевой зоне.\r\n8. Нанести ранения вражескому лидеру.\r\n9. Выполнить один успешный Presence/\r\nLockpick тест.\r\n10. Выполнить один успешный\r\nComputers/найти 2 пустых точки.`;\r\n\r\n\r\nexport const RADIATION = `\r\n1. Выполнить 3 успешных \"Expertise\" теста\r\nлюбого типа или два успешных \"Expertise\"\r\nтеста одного типа.\r\n2. Убить самую дорогую модель противника,\r\nили больше половины моделей (от стартового\r\nзначения) армии противника.\r\n3. Захватить и удерживать 2 предмета до конца\r\nигры.\r\n4. Хотя бы одна ваша модель должна находится\r\nв зоне расстановки противника на конец игры.\r\n5. Вы должны иметь столько же или больше\r\nмоделей, чем противник, в целевой зоне – на\r\nконец игры.\r\n6. Ваш лидер должен закончить игру в целевой\r\nзоне.\r\n7. После расстановки, секретно выберете 1 из\r\nсвоих моделей, не дороже 100 очков. Эта\r\nмодель не должна быть убита на конец игры.\r\nСамостоятельное убийство – считается как\r\nубитая противником.\r\n`\r\n\r\nexport const ENERGY = `\r\n1. Выберите модель противника ценой в 60+\r\n(если таковых нет, то самую дорогую) очков,\r\nвы должны её убить.\r\n<div class=\"points\">- Если вы открываете этот квест, то за\r\nубийство модели получаете 4 ВП, если нет, то 2</div>\r\n2. Выполнить 5 успешных \"Expertise\" теста,\r\nили по 1 успешному тесту каждого типа\r\n<div class=\"points\">- Если вы открываете этот квест, то получаете\r\n4 ВП, если нет, то 2</div>\r\n3. Больше 50% ваших живых моделей, должны\r\nзакончить игру в целевой зоне. \r\n<div class=\"points\">- Если вы\r\nоткрываете этот квест, то получаете 4 ВП, если\r\nнет, то 2</div>\r\n4. Если вражеский лидер на конец игры мертв вы получаете 2 очка. Если на конец 4 хода вражеский лидер мертв, вы можете открыть эту миссию и получить дополнительно 1 очко.\r\nЕсли вы открываете эту миссию на начало расстановки :\r\n<div class=\"points\">\r\n- Лидер мертв на конец игры – 3 очка\r\n- Лидер получил более половины повреждений от своего стартового ХП на конец 4 хода – 1 очко.\r\n</div>\r\n5. \"Выполнить 5 успешных \"Expertise\" теста,\r\nили по 1 успешному тесту каждого типа.\r\n<div class=\"points\">\r\n- Если вы открываете этот квест, то получаете\r\n4 ВП, если нет, то 2</div>\r\n6. Захватите и контролируйте хотя бы один\r\nпредмет, и не дайте противнику\r\nконтролировать предметы на конец игры 4 ВП.\r\n<div class=\"points\">\r\n- Если вы открываете этот квест:\r\nНа конец игры вы должны контролировать\r\nбольше предметов, чем противник - 3 ВП.</div>\r\n7. Если на конец игры вы имеете модель в зоне\r\nрасстановки противника 2ВП, если модель\r\nявляется лидером, то 3ВП.\r\n<div class=\"points\">\r\n- Если вы открываете это задание: Если на\r\nконец любого хода вы имеете 1 не вовлечённую\r\n(в ближний бой) модель в зоне расстановки\r\nпротивника – 3 ВП, если модель лидер, то 4\r\nВП.</div>\r\n`\r\n\r\nexport const CHEM = `\r\n1. HOLD THE LINE\r\n2. DEFEND YOUR STASH\r\n3. EXTRACT THE INFORMATION\r\n4. RAIDERS\r\n5. SCRAPYARD\r\n6. Контроль территории\r\n`;\r\n\r\nexport const CARDS = [\r\n    ZATAN, RADIATION, ENERGY, CHEM\r\n];\r\n\r\nexport const CARD_NAMES = ['ZATAN', 'RADIATION', 'ENERGY', 'CHEM'];\r\n\r\nexport const CARD_GROUP_HINTS = [\r\n    '1 успешный тест не может выполнить более 1 задачи',\r\n    '',\r\n    '',\r\n    `Оба игрока случайно тянут 2 задания, одно из них сбрасывают. Далее кидаем 2\r\n    черных куба, как при розыгрыше инициативы – победитель выбирает миссию\r\n    которая будет активной для обоих игроков! Красные задания можно\r\n    выполнять начиная с 2го хода, максимальное количество игровых очков\r\n    которое можно получить за эти задания – 6.`]\r\n\r\nexport const CARDS_IN_GROUP = [6, 4, 3, 2];\r\n\r\nexport const CARDS_REMOVE_FROM_GROUP = [2, 2, 1, 1];\r\n\r\nexport const CARD_HINTS = {\r\n    'HOLD THE LINE' : '<img src=\"/Fallout_Secret_Service_Randomiser/hintImages/holdTheLine.jpg\" alt=\"hint\" />',\r\n    'DEFEND YOUR STASH' : '<img src=\"/Fallout_Secret_Service_Randomiser/hintImages/defendYourStash.jpg\" alt=\"hint\" />',\r\n    'EXTRACT THE INFORMATION' : '<img src=\"/Fallout_Secret_Service_Randomiser/hintImages/extractTheInformation.jpg\" alt=\"hint\" />',\r\n    'RAIDERS' : '<img src=\"/Fallout_Secret_Service_Randomiser/hintImages/raiders.jpg\" alt=\"hint\" />',\r\n    'SCRAPYARD' : '<img src=\"/Fallout_Secret_Service_Randomiser/hintImages/scrapyard.jpg\" alt=\"hint\" />',\r\n    'Контроль территории' : '<img src=\"/Fallout_Secret_Service_Randomiser/hintImages/control.jpg\" alt=\"hint\" />',\r\n}\r\n","import {CARDS, CARDS_IN_GROUP, CARDS_REMOVE_FROM_GROUP, CARD_GROUP_HINTS} from './constants';\r\nimport shuffle from 'shuffle-array';\r\n\r\nexport default class Cards {\r\n\r\n    constructor() {\r\n        const splitRegExp = new RegExp('\\\\d+\\\\. ');\r\n        this.typeCount = CARDS_IN_GROUP;\r\n        this.typeRemove = CARDS_REMOVE_FROM_GROUP;\r\n        this.hints = CARD_GROUP_HINTS;\r\n        this.cardTypes = CARDS.map(cards => cards.replace(/\\n/g, ' ').split(splitRegExp).map(item => item.trim()).slice(1));\r\n        this.pickedCards = [];\r\n    }\r\n    \r\n    rand() {\r\n        this.pickedCards = [];\r\n        for(const index in this.cardTypes) {\r\n            const cards = this.cardTypes[index];\r\n            this.pickedCards.push(this._pickRandomFromArray(cards, this.typeCount[index]))\r\n        }\r\n        return this.pickedCards;\r\n    }\r\n\r\n    pick(cardType) {\r\n        const card = this._pickRandomFromArray(this.cardTypes[cardType]);\r\n        this.pickedCards[cardType].push(card);\r\n        return card;\r\n    }\r\n\r\n    unpick(cardType, cardIndexes) {\r\n        cardIndexes.sort((a, b) => b - a);\r\n        for(const cardIndex of cardIndexes) {\r\n            this.cardTypes[cardType].push(this.pickedCards[cardType].splice(cardIndex, 1));\r\n        }\r\n    }\r\n\r\n    repick(cardType, cardIndex) {\r\n        const oldCard = this.pickedCards[cardType].splice(cardIndex, 1);\r\n        const newCard = this.pick(cardType);\r\n        this.cardTypes[cardType].push(oldCard);\r\n        return newCard;\r\n    }\r\n\r\n    _pickRandomFromArray(array, count = 1) {\r\n        return shuffle(array).splice(0, count);\r\n    }\r\n\r\n    restoreFromObject(cards) {\r\n        this.cardTypes = cards.cardTypes;\r\n        this.pickedCards = cards.pickedCards;\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nfunction Controls({onStageChange, stage, done}) {\r\n\r\n    return (\r\n        <div className=\"controls\">\r\n            {stage < 2 ? <button onClick={onStageChange} disabled={!done}>Далее</button> : ''}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Controls;","export class ExpirableLocalStorage {\r\n\r\n  expire = 300;\r\n\r\n  constructor() {\r\n    this._fixMode = localStorage.getItem('fixMode') ? true : false;\r\n  }\r\n\r\n  get fixMode() {\r\n    return this._fixMode;\r\n  }\r\n\r\n  set fixMode(value) {\r\n    if(value) {\r\n      this._fixMode = true;\r\n      localStorage.setItem('fixMode', '1');\r\n    }\r\n    else {\r\n      this._fixMode = false;\r\n      localStorage.removeItem('fixMode');\r\n    }\r\n  }\r\n\r\n  get(key) {\r\n    let content;\r\n    const contentString = localStorage.getItem(key);\r\n    try{\r\n      content = JSON.parse(contentString);\r\n    }\r\n    catch (e) {\r\n      console.error(e);\r\n    }\r\n    if(!content \r\n      || (!this.fixMode && (!content.expire || !content.data || new Date(content.expire) < new Date()))) {\r\n      return false;\r\n    }\r\n    return content.data;\r\n  }\r\n\r\n  set(key, data) {\r\n    const expire = new Date();\r\n    expire.setSeconds(expire.getSeconds() + this.expire);\r\n    return localStorage.setItem(key, JSON.stringify({expire, data}));\r\n  }\r\n}\r\n","import React, { useRef, useEffect, useState } from 'react';\r\nimport { usePopper } from 'react-popper';\r\n\r\nimport style from './style.module.css';\r\n\r\nexport const Hint = ({message}) => {\r\n    console.log(message);\r\n    const wrapperRef = useRef(null);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleIsOpen = () => {\r\n        setIsOpen((isOpen) => !isOpen);\r\n    }\r\n  \r\n    return (\r\n      <span ref={wrapperRef}>\r\n        <button type='button' onClick={toggleIsOpen} className={style.button} >\r\n          ?\r\n        </button>\r\n  \r\n        {isOpen && <div onClick={() => setIsOpen(false)} className={style.hint}><div className={style.hintElement}  dangerouslySetInnerHTML={{__html: message}} /></div>}\r\n      </span>\r\n    );\r\n}","import './App.css';\r\nimport Cards from './Cards';\r\nimport { useEffect, useState } from 'react';\r\nimport { CARDS, CARD_NAMES, CARD_GROUP_HINTS, CARD_HINTS } from './constants';\r\nimport Controls from './Controls';\r\nimport {ExpirableLocalStorage} from './ExpirableLocalStorage';\r\nimport { Hint } from './components/hint/Hint';\r\n\r\nconst cards = new Cards();\r\nconst expirableLocalStorage = new ExpirableLocalStorage();\r\nconst data = expirableLocalStorage.get('data');\r\n\r\nfunction App() {\r\n  const [fixMode, setFixMode] = useState(expirableLocalStorage.fixMode);\r\n  const [cardList, setCardList] = useState([]);\r\n  const [time, setTime] = useState(null);\r\n  const [showTime, setShowTime] = useState(false);\r\n  const [stage, setStage] = useState(0);\r\n  const [cardsPreparedToRemove, prepareToRemove] = useState(initialPrepareToRemove);\r\n  const [done, setDone] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if(typeof data.cards !== 'undefined' && typeof data.time !== 'undefined' && typeof data.stage !== 'undefined') {\r\n      const data = expirableLocalStorage.get('data');\r\n      cards.restoreFromObject(data.cards);\r\n      setTime(new Date(data.time));\r\n      setStage(data.stage);\r\n    }\r\n    else {\r\n      cards.rand();\r\n      const newTime = new Date();\r\n      setTime(newTime);\r\n      expirableLocalStorage.set('data', {cards, time: newTime, stage: 0})\r\n    }\r\n    rerenderList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    rerenderList();\r\n  }, [cardsPreparedToRemove]);\r\n\r\n  useEffect(() => {\r\n    if(stage === 0) {\r\n      setDone(isStage0Done());\r\n    }\r\n  }, [cardsPreparedToRemove])\r\n\r\n  useEffect(() => {\r\n    rerenderList();\r\n  }, [stage])\r\n\r\n\r\n  function prepareToRemoveACard(typeIndex, cardIndex) {\r\n    if(cardsPreparedToRemove.get(typeIndex).has(cardIndex)) {\r\n      cardsPreparedToRemove.get(typeIndex).delete(cardIndex);\r\n    }\r\n    else if(canRemoveCard(typeIndex)) {\r\n      cardsPreparedToRemove.get(typeIndex).set(cardIndex);\r\n    }\r\n    prepareToRemove(new Map(cardsPreparedToRemove));\r\n  }\r\n \r\n  function canRemoveCard(typeIndex) {\r\n      if(stage === 0) {\r\n        return cards.typeRemove[typeIndex] > cardsPreparedToRemove.get(typeIndex).size;\r\n      }\r\n      else if(stage === 1) {\r\n        for(const cardsOfType of cardsPreparedToRemove.values()) {\r\n            if(cardsOfType.size > 0) {\r\n              return false;\r\n            }\r\n            return true;\r\n        }\r\n      }\r\n      return false;\r\n  }\r\n\r\n  function rerenderList() {\r\n    setCardList(cards.pickedCards.map((cardsFromType, typeIndex) =>\r\n      <div key={typeIndex}>\r\n        <div>\r\n          {CARD_NAMES[typeIndex]}\r\n          {stage === 0 ? <span> Необходимо удалить {cards.typeRemove[typeIndex]}</span> : ''}\r\n          {CARD_GROUP_HINTS[typeIndex] && <span style={{paddingLeft: '5px'}}><Hint message={CARD_GROUP_HINTS[typeIndex]} /></span>}\r\n        </div>\r\n        <ol>\r\n          {\r\n            cardsFromType.map((card, cardIndex) =>  \r\n              <li disabled={!canRemoveCard(typeIndex) && stage < 2} >\r\n                {CARD_HINTS[card] && <Hint message={CARD_HINTS[card]} />}\r\n                <span onClick={prepareToRemoveACard.bind(null, typeIndex, cardIndex)} key={card}>\r\n                  {stage < 2 ? <input type=\"checkbox\" readOnly checked={cardsPreparedToRemove.get(typeIndex).has(cardIndex)}></input> : \"\"}\r\n                  <span dangerouslySetInnerHTML={{__html: card}} />\r\n                </span>\r\n              </li>\r\n            )\r\n          }\r\n        </ol>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  function isStage0Done() {\r\n      return stage > 0 || allCardsPreparedToRemove();\r\n  }\r\n\r\n  function allCardsPreparedToRemove() {\r\n      for(const [typeIndex, cardsFromType] of cardsPreparedToRemove.entries()){\r\n          if(cards.typeRemove[typeIndex] !== cardsFromType.size) {\r\n            return false;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n\r\n  function onStageChange() {\r\n    stage === 0 ? onStage0Change() : onStage1Change();\r\n  }\r\n\r\n  function onStage0Change() {\r\n      if(!isStage0Done()) return;\r\n      for(const [typeIndex, cardsFromType] of cardsPreparedToRemove.entries()){\r\n        cards.unpick(typeIndex, Array.from(cardsFromType.keys()));\r\n      }\r\n      setStage(1);\r\n      expirableLocalStorage.set('data', {cards, time, stage: 1})\r\n      prepareToRemove(initialPrepareToRemove());\r\n  }\r\n\r\n  function onStage1Change() {\r\n    for(const [typeIndex, cardsFromType] of cardsPreparedToRemove.entries()){\r\n      for(const cardIndex of cardsFromType.keys()) {\r\n        cards.repick(typeIndex, cardIndex);\r\n      }\r\n    }\r\n    setStage(2);\r\n    expirableLocalStorage.set('data', {cards, time, stage: 2})\r\n    prepareToRemove(initialPrepareToRemove());\r\n}\r\n\r\n\r\n  function initialPrepareToRemove() {\r\n    const cardsPreparedToRemove = new Map();\r\n      for(const index in CARDS) {\r\n          cardsPreparedToRemove.set(Number(index), new Map());\r\n      }\r\n      return cardsPreparedToRemove;\r\n  }\r\n\r\n  function toggleFixMode() {\r\n    expirableLocalStorage.fixMode = !fixMode;\r\n    setFixMode(!fixMode);\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        {stage === 0 ? 'Удалите ненужные карты' : ''}\r\n        {stage === 1 ? 'Можете заменить одну карту, на случайную того-же типа' : ''}\r\n        {stage === 2 ? 'Готово' : ''}\r\n        <button onClick={() => setShowTime(true)}>\r\n          Время\r\n        </button>\r\n      </header>\r\n      <div>\r\n        {cardList}\r\n      </div>\r\n      <Controls stage={stage} onStageChange={onStageChange} done={done || stage > 0} />\r\n      <button class=\"btn__fix-mode\" onClick={toggleFixMode}>{fixMode ? 'Fix mode on' : 'Fix mode off'}</button>\r\n      <div className=\"modal\" style={{display: showTime ? 'flex' : 'none'}} onClick={() => setShowTime(false)}>\r\n        <div className=\"modal-content\">\r\n          {time ? time.toLocaleTimeString() : 'Time is not set'}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"style_button__3yBfo\",\"hint\":\"style_hint__2giIQ\",\"hintElement\":\"style_hintElement__3hCW8\"};"],"sourceRoot":""}